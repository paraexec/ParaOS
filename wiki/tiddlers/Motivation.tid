created: 20220523034442017
modified: 20220525042419583
tags: 
title: Motivation
type: text/vnd.tiddlywiki

We build software systems on top of many ''layers'' (//in the name of focus, efficiency and to avoid reinventing the wheel.//) Battlefield-tested foundation that addresses common needs is a great time, money and energy saver.

However, many of the layers we use today have been designed for a different environment, needs and deployment size.

We (predominantly) write code in programming languages that were intended to make programs that run on a single computer, put that code into files and deploy instances of operating systems, the foundations of which were designed about 50 years ago, primarily concerning itself with serving the resources (CPU time, memory, persistence, networking and other peripherals) of an underlying computer to multiple users and their programs.

The systems we develop these days span ''multiple nodes'' and heavily rely on lage-scale, highly-available persistence capabilities as opposed to dealing with local files.

So, what if built an operating system for these applications?

